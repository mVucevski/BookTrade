@model IEnumerable<IT_BookTrade.Models.Book>

@{
    ViewBag.Title = "BookTrade";
}

<div class="container my-2">


    @for (int i = 0; i < 5; i++)
    {
        var mod = Model;
        if (i == 0)
        {
            <h3>Bestselling Books</h3>
            //mod = Model.OrderByDescending(x => x.Rating);
            mod = Model.OrderByDescending(x => x.BooksSold);
        }
        if (i == 1)
        {
            <h3>Highest Rated Books</h3>
            mod = Model.OrderByDescending(x => x.Rating);
        }
        if (i == 2)
        {
            <h3>Books for Trade</h3>
            mod = Model.Where(x => x.Tradeable).OrderByDescending(x => x.Rating);
        }
        if (i == 3)
        {
            <h3>Most Popular Books</h3>
            mod = Model.OrderByDescending(x => x.Ratings);
        }
        if (i == 4)
        {
            <h3>Latest Deals</h3>
            mod = Model.Reverse();
        }
        <hr />
        <div id="bestsellers" class="row my-3">
            @foreach (var book in mod.Take(6))
            {
                <div class="col-lg-2 col-md-4 mb-4 d-flex align-items-stretch">
                    <div class="card h-100">
                        <a href="@Url.Action("Details", "Books", new { id = book.ID })" style="text-decoration:none" class="cards-a">
                            <div class="card add-pointer">
                                <img class="card-img-top card-img" src="@Url.Content(book.ImagePath)" alt="">
                                <div class="card-body h-100">
                                    <div class="card-title card-Title">@book.Title</div>
                                    <div class="card-text card-Author">@book.BookAuthor</div>
                                    @if (book.Ratings > 0)
                                    {
                                        <div class="star-ratings-sprite"><span style="width:@(book.Rating*20)%" class="star-ratings-sprite-rating"></span></div>
                                    }
                                    else
                                    {
                                        <div>No rating yet!</div>
                                    }
                                    <div class="card-text">Tradeable: @(book.Tradeable ? "Yes" : "No")</div>
                                    <div class="card-text card-price">$@book.Price</div>
                                </div>
                            </div>
                        </a>
                        @*@if (book.SellerEmail.Equals(User.Identity.Name) || book.Amount < 1)
                        {
                            <div class="card-footer" style="height:100%">
                            </div>
                        }*@

                        @if (book.SellerEmail.Equals(User.Identity.Name))
                        {
                            <div class="card-footer">
                                <button class="btn btn-default btn-block">Your Offer</button>
                            </div>
                        }
                        else if (book.Amount < 1)
                        {
                            <div class="card-footer">
                                <button class="btn btn-default btn-block">Not Available</button>
                            </div>
                        }
                        else
                        {

                            <div class="card-footer">
                                @if ((ViewBag.BookIDs as List<int>).Contains(book.ID))
                                {
                                    @*@Html.ActionLink("In Cart", "RemoveFromCartIndex", new { id = book.ID }, new { @class = "btn btn-danger btn-block" })*@
                                    <button bookID="@book.ID" class="btn btn-danger btn-block api-remove-from-cart">In Cart</button>
                                }
                                else
                                {
                                    @*@Html.ActionLink("Add to Cart", "AddToCart", new { id = book.ID }, new { @class = "btn btn-success btn-block" })*@
                                    <button bookID="@book.ID" userEmail="@User.Identity.IsAuthenticated.ToString()" class="btn btn-success btn-block api-add-to-cart">Add to Cart</button>
                                }
                            </div>
                        }
                    </div>

                </div>
            }
        </div>
        <!--BESTSELLERS-->

    }
</div>

@section Scripts
{

    <script>
        $(document).ready(function () {

            var itemsString = $("body > nav:nth-child(1) > div > div > div.col-md-3 > div > i.fa.fa-shopping-cart.pl-4.navIcons.add-pointer > strong");
            var itemsSplit = itemsString.text().split(" ");
            var items = parseInt(itemsSplit[0]);

            $(document).on("click", ".api-add-to-cart", function () {
                var button = $(this);

                if (button.attr("userEmail") == 'False') {
                    var url = '@Url.Action("Login", "Account")';
                    window.location.href = url;
                } else {

                    $.ajax({
                        url: "/api/BooksAPI/0/0/" + button.attr("bookID"),
                        method: "GET",
                        success: function () {
                            button.removeClass("btn-success");
                            button.addClass("btn-danger");
                            button.removeClass("api-add-to-cart");
                            button.addClass("api-remove-from-cart");
                            button.text("In Cart");
                            items = items + 1;
                            itemsString.text(items + " Items");
                        }
                    });
                }
            });
            
            $(document).on("click", ".api-remove-from-cart", function () {
                var button = $(this);
                $.ajax({
                    url: "/api/BooksAPI/0/1/" + button.attr("bookID"),
                    method: "GET",
                    success: function () {
                        button.removeClass("btn-danger");
                        button.addClass("btn-success");
                        button.removeClass("api-remove-from-cart");
                        button.addClass("api-add-to-cart");
                        button.text("Add to Cart");
                        items = items - 1;
                        itemsString.text(items + " Items");
                    }
                });
            });
        });
    </script>
}